// Copyright 2022 Stichting ThingsIX Foundation
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.4
// source: router/router.proto

package router

import (
	gw "github.com/brocaar/chirpstack-api/go/v3/gw"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Xor8Filter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Seed         uint64 `protobuf:"varint,1,opt,name=seed,proto3" json:"seed,omitempty"`
	Blocklength  uint32 `protobuf:"varint,2,opt,name=blocklength,proto3" json:"blocklength,omitempty"`
	Fingerprints []byte `protobuf:"bytes,3,opt,name=fingerprints,proto3" json:"fingerprints,omitempty"`
}

func (x *Xor8Filter) Reset() {
	*x = Xor8Filter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_router_router_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Xor8Filter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Xor8Filter) ProtoMessage() {}

func (x *Xor8Filter) ProtoReflect() protoreflect.Message {
	mi := &file_router_router_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Xor8Filter.ProtoReflect.Descriptor instead.
func (*Xor8Filter) Descriptor() ([]byte, []int) {
	return file_router_router_proto_rawDescGZIP(), []int{0}
}

func (x *Xor8Filter) GetSeed() uint64 {
	if x != nil {
		return x.Seed
	}
	return 0
}

func (x *Xor8Filter) GetBlocklength() uint32 {
	if x != nil {
		return x.Blocklength
	}
	return 0
}

func (x *Xor8Filter) GetFingerprints() []byte {
	if x != nil {
		return x.Fingerprints
	}
	return nil
}

type JoinFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Filter:
	//
	//	*JoinFilter_Xor8
	Filter isJoinFilter_Filter `protobuf_oneof:"filter"`
}

func (x *JoinFilter) Reset() {
	*x = JoinFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_router_router_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinFilter) ProtoMessage() {}

func (x *JoinFilter) ProtoReflect() protoreflect.Message {
	mi := &file_router_router_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinFilter.ProtoReflect.Descriptor instead.
func (*JoinFilter) Descriptor() ([]byte, []int) {
	return file_router_router_proto_rawDescGZIP(), []int{1}
}

func (m *JoinFilter) GetFilter() isJoinFilter_Filter {
	if m != nil {
		return m.Filter
	}
	return nil
}

func (x *JoinFilter) GetXor8() *Xor8Filter {
	if x, ok := x.GetFilter().(*JoinFilter_Xor8); ok {
		return x.Xor8
	}
	return nil
}

type isJoinFilter_Filter interface {
	isJoinFilter_Filter()
}

type JoinFilter_Xor8 struct {
	Xor8 *Xor8Filter `protobuf:"bytes,1,opt,name=xor8,proto3,oneof"`
}

func (*JoinFilter_Xor8) isJoinFilter_Filter() {}

type NetIdsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *NetIdsRequest) Reset() {
	*x = NetIdsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_router_router_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetIdsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetIdsRequest) ProtoMessage() {}

func (x *NetIdsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_router_router_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetIdsRequest.ProtoReflect.Descriptor instead.
func (*NetIdsRequest) Descriptor() ([]byte, []int) {
	return file_router_router_proto_rawDescGZIP(), []int{2}
}

type NetIdsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NetId [][]byte `protobuf:"bytes,1,rep,name=netId,proto3" json:"netId,omitempty"`
}

func (x *NetIdsResponse) Reset() {
	*x = NetIdsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_router_router_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetIdsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetIdsResponse) ProtoMessage() {}

func (x *NetIdsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_router_router_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetIdsResponse.ProtoReflect.Descriptor instead.
func (*NetIdsResponse) Descriptor() ([]byte, []int) {
	return file_router_router_proto_rawDescGZIP(), []int{3}
}

func (x *NetIdsResponse) GetNetId() [][]byte {
	if x != nil {
		return x.NetId
	}
	return nil
}

type JoinFilterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *JoinFilterRequest) Reset() {
	*x = JoinFilterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_router_router_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinFilterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinFilterRequest) ProtoMessage() {}

func (x *JoinFilterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_router_router_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinFilterRequest.ProtoReflect.Descriptor instead.
func (*JoinFilterRequest) Descriptor() ([]byte, []int) {
	return file_router_router_proto_rawDescGZIP(), []int{4}
}

type JoinFilterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JoinFilter *JoinFilter `protobuf:"bytes,1,opt,name=joinFilter,proto3" json:"joinFilter,omitempty"`
}

func (x *JoinFilterResponse) Reset() {
	*x = JoinFilterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_router_router_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinFilterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinFilterResponse) ProtoMessage() {}

func (x *JoinFilterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_router_router_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinFilterResponse.ProtoReflect.Descriptor instead.
func (*JoinFilterResponse) Descriptor() ([]byte, []int) {
	return file_router_router_proto_rawDescGZIP(), []int{5}
}

func (x *JoinFilterResponse) GetJoinFilter() *JoinFilter {
	if x != nil {
		return x.JoinFilter
	}
	return nil
}

type GatewayInformation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublicKey []byte `protobuf:"bytes,1,opt,name=publicKey,proto3" json:"publicKey,omitempty"`
	Owner     []byte `protobuf:"bytes,2,opt,name=owner,proto3" json:"owner,omitempty"`
}

func (x *GatewayInformation) Reset() {
	*x = GatewayInformation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_router_router_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GatewayInformation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GatewayInformation) ProtoMessage() {}

func (x *GatewayInformation) ProtoReflect() protoreflect.Message {
	mi := &file_router_router_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GatewayInformation.ProtoReflect.Descriptor instead.
func (*GatewayInformation) Descriptor() ([]byte, []int) {
	return file_router_router_proto_rawDescGZIP(), []int{6}
}

func (x *GatewayInformation) GetPublicKey() []byte {
	if x != nil {
		return x.PublicKey
	}
	return nil
}

func (x *GatewayInformation) GetOwner() []byte {
	if x != nil {
		return x.Owner
	}
	return nil
}

type AirtimeReceipt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Owner   []byte `protobuf:"bytes,1,opt,name=owner,proto3" json:"owner,omitempty"`
	Airtime uint32 `protobuf:"varint,2,opt,name=airtime,proto3" json:"airtime,omitempty"`
}

func (x *AirtimeReceipt) Reset() {
	*x = AirtimeReceipt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_router_router_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AirtimeReceipt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AirtimeReceipt) ProtoMessage() {}

func (x *AirtimeReceipt) ProtoReflect() protoreflect.Message {
	mi := &file_router_router_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AirtimeReceipt.ProtoReflect.Descriptor instead.
func (*AirtimeReceipt) Descriptor() ([]byte, []int) {
	return file_router_router_proto_rawDescGZIP(), []int{7}
}

func (x *AirtimeReceipt) GetOwner() []byte {
	if x != nil {
		return x.Owner
	}
	return nil
}

func (x *AirtimeReceipt) GetAirtime() uint32 {
	if x != nil {
		return x.Airtime
	}
	return 0
}

type UplinkFrameEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UplinkFrame    *gw.UplinkFrame `protobuf:"bytes,1,opt,name=uplinkFrame,proto3" json:"uplinkFrame,omitempty"`
	AirtimeReceipt *AirtimeReceipt `protobuf:"bytes,2,opt,name=airtimeReceipt,proto3" json:"airtimeReceipt,omitempty"`
}

func (x *UplinkFrameEvent) Reset() {
	*x = UplinkFrameEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_router_router_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UplinkFrameEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UplinkFrameEvent) ProtoMessage() {}

func (x *UplinkFrameEvent) ProtoReflect() protoreflect.Message {
	mi := &file_router_router_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UplinkFrameEvent.ProtoReflect.Descriptor instead.
func (*UplinkFrameEvent) Descriptor() ([]byte, []int) {
	return file_router_router_proto_rawDescGZIP(), []int{8}
}

func (x *UplinkFrameEvent) GetUplinkFrame() *gw.UplinkFrame {
	if x != nil {
		return x.UplinkFrame
	}
	return nil
}

func (x *UplinkFrameEvent) GetAirtimeReceipt() *AirtimeReceipt {
	if x != nil {
		return x.AirtimeReceipt
	}
	return nil
}

type DownlinkTXAckEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DownlinkTXAck  *gw.DownlinkTXAck `protobuf:"bytes,1,opt,name=downlinkTXAck,proto3" json:"downlinkTXAck,omitempty"`
	AirtimeReceipt *AirtimeReceipt   `protobuf:"bytes,2,opt,name=airtimeReceipt,proto3" json:"airtimeReceipt,omitempty"`
}

func (x *DownlinkTXAckEvent) Reset() {
	*x = DownlinkTXAckEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_router_router_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownlinkTXAckEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownlinkTXAckEvent) ProtoMessage() {}

func (x *DownlinkTXAckEvent) ProtoReflect() protoreflect.Message {
	mi := &file_router_router_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownlinkTXAckEvent.ProtoReflect.Descriptor instead.
func (*DownlinkTXAckEvent) Descriptor() ([]byte, []int) {
	return file_router_router_proto_rawDescGZIP(), []int{9}
}

func (x *DownlinkTXAckEvent) GetDownlinkTXAck() *gw.DownlinkTXAck {
	if x != nil {
		return x.DownlinkTXAck
	}
	return nil
}

func (x *DownlinkTXAckEvent) GetAirtimeReceipt() *AirtimeReceipt {
	if x != nil {
		return x.AirtimeReceipt
	}
	return nil
}

type StatusEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Online bool `protobuf:"varint,1,opt,name=online,proto3" json:"online,omitempty"`
}

func (x *StatusEvent) Reset() {
	*x = StatusEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_router_router_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatusEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusEvent) ProtoMessage() {}

func (x *StatusEvent) ProtoReflect() protoreflect.Message {
	mi := &file_router_router_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusEvent.ProtoReflect.Descriptor instead.
func (*StatusEvent) Descriptor() ([]byte, []int) {
	return file_router_router_proto_rawDescGZIP(), []int{10}
}

func (x *StatusEvent) GetOnline() bool {
	if x != nil {
		return x.Online
	}
	return false
}

type GatewayToRouterEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GatewayInformation *GatewayInformation `protobuf:"bytes,1,opt,name=gatewayInformation,proto3" json:"gatewayInformation,omitempty"`
	// Types that are assignable to Event:
	//
	//	*GatewayToRouterEvent_UplinkFrameEvent
	//	*GatewayToRouterEvent_DownlinkTXAckEvent
	//	*GatewayToRouterEvent_StatusEvent
	Event isGatewayToRouterEvent_Event `protobuf_oneof:"event"`
}

func (x *GatewayToRouterEvent) Reset() {
	*x = GatewayToRouterEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_router_router_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GatewayToRouterEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GatewayToRouterEvent) ProtoMessage() {}

func (x *GatewayToRouterEvent) ProtoReflect() protoreflect.Message {
	mi := &file_router_router_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GatewayToRouterEvent.ProtoReflect.Descriptor instead.
func (*GatewayToRouterEvent) Descriptor() ([]byte, []int) {
	return file_router_router_proto_rawDescGZIP(), []int{11}
}

func (x *GatewayToRouterEvent) GetGatewayInformation() *GatewayInformation {
	if x != nil {
		return x.GatewayInformation
	}
	return nil
}

func (m *GatewayToRouterEvent) GetEvent() isGatewayToRouterEvent_Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (x *GatewayToRouterEvent) GetUplinkFrameEvent() *UplinkFrameEvent {
	if x, ok := x.GetEvent().(*GatewayToRouterEvent_UplinkFrameEvent); ok {
		return x.UplinkFrameEvent
	}
	return nil
}

func (x *GatewayToRouterEvent) GetDownlinkTXAckEvent() *DownlinkTXAckEvent {
	if x, ok := x.GetEvent().(*GatewayToRouterEvent_DownlinkTXAckEvent); ok {
		return x.DownlinkTXAckEvent
	}
	return nil
}

func (x *GatewayToRouterEvent) GetStatusEvent() *StatusEvent {
	if x, ok := x.GetEvent().(*GatewayToRouterEvent_StatusEvent); ok {
		return x.StatusEvent
	}
	return nil
}

type isGatewayToRouterEvent_Event interface {
	isGatewayToRouterEvent_Event()
}

type GatewayToRouterEvent_UplinkFrameEvent struct {
	UplinkFrameEvent *UplinkFrameEvent `protobuf:"bytes,2,opt,name=uplinkFrameEvent,proto3,oneof"`
}

type GatewayToRouterEvent_DownlinkTXAckEvent struct {
	DownlinkTXAckEvent *DownlinkTXAckEvent `protobuf:"bytes,3,opt,name=downlinkTXAckEvent,proto3,oneof"`
}

type GatewayToRouterEvent_StatusEvent struct {
	StatusEvent *StatusEvent `protobuf:"bytes,4,opt,name=statusEvent,proto3,oneof"`
}

func (*GatewayToRouterEvent_UplinkFrameEvent) isGatewayToRouterEvent_Event() {}

func (*GatewayToRouterEvent_DownlinkTXAckEvent) isGatewayToRouterEvent_Event() {}

func (*GatewayToRouterEvent_StatusEvent) isGatewayToRouterEvent_Event() {}

type DownlinkFrameEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DownlinkFrame *gw.DownlinkFrame `protobuf:"bytes,2,opt,name=downlinkFrame,proto3" json:"downlinkFrame,omitempty"`
}

func (x *DownlinkFrameEvent) Reset() {
	*x = DownlinkFrameEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_router_router_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownlinkFrameEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownlinkFrameEvent) ProtoMessage() {}

func (x *DownlinkFrameEvent) ProtoReflect() protoreflect.Message {
	mi := &file_router_router_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownlinkFrameEvent.ProtoReflect.Descriptor instead.
func (*DownlinkFrameEvent) Descriptor() ([]byte, []int) {
	return file_router_router_proto_rawDescGZIP(), []int{12}
}

func (x *DownlinkFrameEvent) GetDownlinkFrame() *gw.DownlinkFrame {
	if x != nil {
		return x.DownlinkFrame
	}
	return nil
}

type AirtimePaymentEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AirtimePaymentEvent) Reset() {
	*x = AirtimePaymentEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_router_router_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AirtimePaymentEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AirtimePaymentEvent) ProtoMessage() {}

func (x *AirtimePaymentEvent) ProtoReflect() protoreflect.Message {
	mi := &file_router_router_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AirtimePaymentEvent.ProtoReflect.Descriptor instead.
func (*AirtimePaymentEvent) Descriptor() ([]byte, []int) {
	return file_router_router_proto_rawDescGZIP(), []int{13}
}

type RouterToGatewayEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Event:
	//
	//	*RouterToGatewayEvent_DownlinkFrameEvent
	//	*RouterToGatewayEvent_AirtimePaymentEvent
	Event isRouterToGatewayEvent_Event `protobuf_oneof:"event"`
}

func (x *RouterToGatewayEvent) Reset() {
	*x = RouterToGatewayEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_router_router_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RouterToGatewayEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RouterToGatewayEvent) ProtoMessage() {}

func (x *RouterToGatewayEvent) ProtoReflect() protoreflect.Message {
	mi := &file_router_router_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RouterToGatewayEvent.ProtoReflect.Descriptor instead.
func (*RouterToGatewayEvent) Descriptor() ([]byte, []int) {
	return file_router_router_proto_rawDescGZIP(), []int{14}
}

func (m *RouterToGatewayEvent) GetEvent() isRouterToGatewayEvent_Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (x *RouterToGatewayEvent) GetDownlinkFrameEvent() *DownlinkFrameEvent {
	if x, ok := x.GetEvent().(*RouterToGatewayEvent_DownlinkFrameEvent); ok {
		return x.DownlinkFrameEvent
	}
	return nil
}

func (x *RouterToGatewayEvent) GetAirtimePaymentEvent() *AirtimePaymentEvent {
	if x, ok := x.GetEvent().(*RouterToGatewayEvent_AirtimePaymentEvent); ok {
		return x.AirtimePaymentEvent
	}
	return nil
}

type isRouterToGatewayEvent_Event interface {
	isRouterToGatewayEvent_Event()
}

type RouterToGatewayEvent_DownlinkFrameEvent struct {
	DownlinkFrameEvent *DownlinkFrameEvent `protobuf:"bytes,1,opt,name=downlinkFrameEvent,proto3,oneof"`
}

type RouterToGatewayEvent_AirtimePaymentEvent struct {
	AirtimePaymentEvent *AirtimePaymentEvent `protobuf:"bytes,2,opt,name=airtimePaymentEvent,proto3,oneof"`
}

func (*RouterToGatewayEvent_DownlinkFrameEvent) isRouterToGatewayEvent_Event() {}

func (*RouterToGatewayEvent_AirtimePaymentEvent) isRouterToGatewayEvent_Event() {}

var File_router_router_proto protoreflect.FileDescriptor

var file_router_router_proto_rawDesc = []byte{
	0x0a, 0x13, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x2f, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x1a, 0x0b, 0x67,
	0x77, 0x2f, 0x67, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x66, 0x0a, 0x0a, 0x58, 0x6f,
	0x72, 0x38, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x65, 0x65, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x73, 0x65, 0x65, 0x64, 0x12, 0x20, 0x0a, 0x0b,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x22,
	0x0a, 0x0c, 0x66, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x66, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x70, 0x72, 0x69, 0x6e,
	0x74, 0x73, 0x22, 0x40, 0x0a, 0x0a, 0x4a, 0x6f, 0x69, 0x6e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x12, 0x28, 0x0a, 0x04, 0x78, 0x6f, 0x72, 0x38, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x2e, 0x58, 0x6f, 0x72, 0x38, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x48, 0x00, 0x52, 0x04, 0x78, 0x6f, 0x72, 0x38, 0x42, 0x08, 0x0a, 0x06, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x22, 0x0f, 0x0a, 0x0d, 0x4e, 0x65, 0x74, 0x49, 0x64, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x26, 0x0a, 0x0e, 0x4e, 0x65, 0x74, 0x49, 0x64, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x65, 0x74, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x05, 0x6e, 0x65, 0x74, 0x49, 0x64, 0x22, 0x13, 0x0a,
	0x11, 0x4a, 0x6f, 0x69, 0x6e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x48, 0x0a, 0x12, 0x4a, 0x6f, 0x69, 0x6e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x0a, 0x6a, 0x6f, 0x69, 0x6e,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x72,
	0x6f, 0x75, 0x74, 0x65, 0x72, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x52, 0x0a, 0x6a, 0x6f, 0x69, 0x6e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0x48, 0x0a, 0x12,
	0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x22, 0x40, 0x0a, 0x0e, 0x41, 0x69, 0x72, 0x74, 0x69, 0x6d,
	0x65, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x18,
	0x0a, 0x07, 0x61, 0x69, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x07, 0x61, 0x69, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x22, 0x85, 0x01, 0x0a, 0x10, 0x55, 0x70, 0x6c,
	0x69, 0x6e, 0x6b, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x31, 0x0a,
	0x0b, 0x75, 0x70, 0x6c, 0x69, 0x6e, 0x6b, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x67, 0x77, 0x2e, 0x55, 0x70, 0x6c, 0x69, 0x6e, 0x6b, 0x46, 0x72,
	0x61, 0x6d, 0x65, 0x52, 0x0b, 0x75, 0x70, 0x6c, 0x69, 0x6e, 0x6b, 0x46, 0x72, 0x61, 0x6d, 0x65,
	0x12, 0x3e, 0x0a, 0x0e, 0x61, 0x69, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x65, 0x69,
	0x70, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65,
	0x72, 0x2e, 0x41, 0x69, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74,
	0x52, 0x0e, 0x61, 0x69, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74,
	0x22, 0x8d, 0x01, 0x0a, 0x12, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x54, 0x58, 0x41,
	0x63, 0x6b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x37, 0x0a, 0x0d, 0x64, 0x6f, 0x77, 0x6e, 0x6c,
	0x69, 0x6e, 0x6b, 0x54, 0x58, 0x41, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x67, 0x77, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x54, 0x58, 0x41, 0x63,
	0x6b, 0x52, 0x0d, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x54, 0x58, 0x41, 0x63, 0x6b,
	0x12, 0x3e, 0x0a, 0x0e, 0x61, 0x69, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x65, 0x69,
	0x70, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65,
	0x72, 0x2e, 0x41, 0x69, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74,
	0x52, 0x0e, 0x61, 0x69, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74,
	0x22, 0x25, 0x0a, 0x0b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x06, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x22, 0xba, 0x02, 0x0a, 0x14, 0x47, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x54, 0x6f, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x12, 0x4a, 0x0a, 0x12, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x72,
	0x6f, 0x75, 0x74, 0x65, 0x72, 0x2e, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x49, 0x6e, 0x66,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x12, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x46, 0x0a, 0x10,
	0x75, 0x70, 0x6c, 0x69, 0x6e, 0x6b, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x2e,
	0x55, 0x70, 0x6c, 0x69, 0x6e, 0x6b, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x48, 0x00, 0x52, 0x10, 0x75, 0x70, 0x6c, 0x69, 0x6e, 0x6b, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x12, 0x4c, 0x0a, 0x12, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x69, 0x6e, 0x6b,
	0x54, 0x58, 0x41, 0x63, 0x6b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x69,
	0x6e, 0x6b, 0x54, 0x58, 0x41, 0x63, 0x6b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x12,
	0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x54, 0x58, 0x41, 0x63, 0x6b, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x12, 0x37, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x0b,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x42, 0x07, 0x0a, 0x05, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x22, 0x4d, 0x0a, 0x12, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x69, 0x6e, 0x6b,
	0x46, 0x72, 0x61, 0x6d, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x37, 0x0a, 0x0d, 0x64, 0x6f,
	0x77, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x67, 0x77, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x46,
	0x72, 0x61, 0x6d, 0x65, 0x52, 0x0d, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x46, 0x72,
	0x61, 0x6d, 0x65, 0x22, 0x15, 0x0a, 0x13, 0x41, 0x69, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x22, 0xbe, 0x01, 0x0a, 0x14, 0x52,
	0x6f, 0x75, 0x74, 0x65, 0x72, 0x54, 0x6f, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x12, 0x4c, 0x0a, 0x12, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x46,
	0x72, 0x61, 0x6d, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x69, 0x6e,
	0x6b, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x12, 0x64,
	0x6f, 0x77, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x12, 0x4f, 0x0a, 0x13, 0x61, 0x69, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x2e, 0x41, 0x69, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x13, 0x61,
	0x69, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x42, 0x07, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x32, 0xd2, 0x01, 0x0a, 0x08,
	0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x56, 0x31, 0x12, 0x37, 0x0a, 0x06, 0x4e, 0x65, 0x74, 0x49,
	0x64, 0x73, 0x12, 0x15, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x2e, 0x4e, 0x65, 0x74, 0x49,
	0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x72, 0x6f, 0x75, 0x74,
	0x65, 0x72, 0x2e, 0x4e, 0x65, 0x74, 0x49, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x43, 0x0a, 0x0a, 0x4a, 0x6f, 0x69, 0x6e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12,
	0x19, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x72, 0x6f, 0x75,
	0x74, 0x65, 0x72, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x06, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73,
	0x12, 0x1c, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x2e, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x54, 0x6f, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x1a, 0x1c,
	0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x54, 0x6f,
	0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x28, 0x01, 0x30, 0x01,
	0x42, 0x34, 0x5a, 0x32, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x54,
	0x68, 0x69, 0x6e, 0x67, 0x73, 0x49, 0x58, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2f, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x6f, 0x2f,
	0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_router_router_proto_rawDescOnce sync.Once
	file_router_router_proto_rawDescData = file_router_router_proto_rawDesc
)

func file_router_router_proto_rawDescGZIP() []byte {
	file_router_router_proto_rawDescOnce.Do(func() {
		file_router_router_proto_rawDescData = protoimpl.X.CompressGZIP(file_router_router_proto_rawDescData)
	})
	return file_router_router_proto_rawDescData
}

var file_router_router_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_router_router_proto_goTypes = []interface{}{
	(*Xor8Filter)(nil),           // 0: router.Xor8Filter
	(*JoinFilter)(nil),           // 1: router.JoinFilter
	(*NetIdsRequest)(nil),        // 2: router.NetIdsRequest
	(*NetIdsResponse)(nil),       // 3: router.NetIdsResponse
	(*JoinFilterRequest)(nil),    // 4: router.JoinFilterRequest
	(*JoinFilterResponse)(nil),   // 5: router.JoinFilterResponse
	(*GatewayInformation)(nil),   // 6: router.GatewayInformation
	(*AirtimeReceipt)(nil),       // 7: router.AirtimeReceipt
	(*UplinkFrameEvent)(nil),     // 8: router.UplinkFrameEvent
	(*DownlinkTXAckEvent)(nil),   // 9: router.DownlinkTXAckEvent
	(*StatusEvent)(nil),          // 10: router.StatusEvent
	(*GatewayToRouterEvent)(nil), // 11: router.GatewayToRouterEvent
	(*DownlinkFrameEvent)(nil),   // 12: router.DownlinkFrameEvent
	(*AirtimePaymentEvent)(nil),  // 13: router.AirtimePaymentEvent
	(*RouterToGatewayEvent)(nil), // 14: router.RouterToGatewayEvent
	(*gw.UplinkFrame)(nil),       // 15: gw.UplinkFrame
	(*gw.DownlinkTXAck)(nil),     // 16: gw.DownlinkTXAck
	(*gw.DownlinkFrame)(nil),     // 17: gw.DownlinkFrame
}
var file_router_router_proto_depIdxs = []int32{
	0,  // 0: router.JoinFilter.xor8:type_name -> router.Xor8Filter
	1,  // 1: router.JoinFilterResponse.joinFilter:type_name -> router.JoinFilter
	15, // 2: router.UplinkFrameEvent.uplinkFrame:type_name -> gw.UplinkFrame
	7,  // 3: router.UplinkFrameEvent.airtimeReceipt:type_name -> router.AirtimeReceipt
	16, // 4: router.DownlinkTXAckEvent.downlinkTXAck:type_name -> gw.DownlinkTXAck
	7,  // 5: router.DownlinkTXAckEvent.airtimeReceipt:type_name -> router.AirtimeReceipt
	6,  // 6: router.GatewayToRouterEvent.gatewayInformation:type_name -> router.GatewayInformation
	8,  // 7: router.GatewayToRouterEvent.uplinkFrameEvent:type_name -> router.UplinkFrameEvent
	9,  // 8: router.GatewayToRouterEvent.downlinkTXAckEvent:type_name -> router.DownlinkTXAckEvent
	10, // 9: router.GatewayToRouterEvent.statusEvent:type_name -> router.StatusEvent
	17, // 10: router.DownlinkFrameEvent.downlinkFrame:type_name -> gw.DownlinkFrame
	12, // 11: router.RouterToGatewayEvent.downlinkFrameEvent:type_name -> router.DownlinkFrameEvent
	13, // 12: router.RouterToGatewayEvent.airtimePaymentEvent:type_name -> router.AirtimePaymentEvent
	2,  // 13: router.RouterV1.NetIds:input_type -> router.NetIdsRequest
	4,  // 14: router.RouterV1.JoinFilter:input_type -> router.JoinFilterRequest
	11, // 15: router.RouterV1.Events:input_type -> router.GatewayToRouterEvent
	3,  // 16: router.RouterV1.NetIds:output_type -> router.NetIdsResponse
	5,  // 17: router.RouterV1.JoinFilter:output_type -> router.JoinFilterResponse
	14, // 18: router.RouterV1.Events:output_type -> router.RouterToGatewayEvent
	16, // [16:19] is the sub-list for method output_type
	13, // [13:16] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_router_router_proto_init() }
func file_router_router_proto_init() {
	if File_router_router_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_router_router_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Xor8Filter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_router_router_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_router_router_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetIdsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_router_router_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetIdsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_router_router_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinFilterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_router_router_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinFilterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_router_router_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GatewayInformation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_router_router_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AirtimeReceipt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_router_router_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UplinkFrameEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_router_router_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownlinkTXAckEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_router_router_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatusEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_router_router_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GatewayToRouterEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_router_router_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownlinkFrameEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_router_router_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AirtimePaymentEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_router_router_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RouterToGatewayEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_router_router_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*JoinFilter_Xor8)(nil),
	}
	file_router_router_proto_msgTypes[11].OneofWrappers = []interface{}{
		(*GatewayToRouterEvent_UplinkFrameEvent)(nil),
		(*GatewayToRouterEvent_DownlinkTXAckEvent)(nil),
		(*GatewayToRouterEvent_StatusEvent)(nil),
	}
	file_router_router_proto_msgTypes[14].OneofWrappers = []interface{}{
		(*RouterToGatewayEvent_DownlinkFrameEvent)(nil),
		(*RouterToGatewayEvent_AirtimePaymentEvent)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_router_router_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_router_router_proto_goTypes,
		DependencyIndexes: file_router_router_proto_depIdxs,
		MessageInfos:      file_router_router_proto_msgTypes,
	}.Build()
	File_router_router_proto = out.File
	file_router_router_proto_rawDesc = nil
	file_router_router_proto_goTypes = nil
	file_router_router_proto_depIdxs = nil
}
